version: '3.8'

services:
  # PostgreSQL with TimescaleDB for price data storage
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: price_tracker_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Server for frontend
  api-server:
    image: node:18-alpine
    container_name: price_tracker_api
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./api-server:/app
    ports:
      - "${API_PORT}:3001"
    environment:
      DB_HOST: timescaledb
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      TZ: ${TIMEZONE}
      SOFIA_API_URL: http://sofia-api:8080
      SOFIA_API_ENDPOINT: /products
    command: sh -c "npm install && npm start"
    depends_on:
      timescaledb:
        condition: service_healthy
    networks:
      - frontend
      - backend

  # Web server for frontend
  frontend:
    image: nginx:alpine
    container_name: price_tracker_frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api-server
    networks:
      - frontend

  # n8n for automation workflows
  n8n:
    image: n8nio/n8n
    container_name: price_tracker_n8n
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_HOST=localhost
      - GENERIC_TIMEZONE=${TIMEZONE}
      - TZ=${TIMEZONE}
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/workflows
    networks:
      - frontend
      - backend

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: price_tracker_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - backend

  # Local instance of sofia-supermarkets-api (Kotlin/Spring)
  sofia-api:
    image: sofia-supermarkets-api:local
    build:
      context: ./external/sofia-supermarkets-api
      dockerfile: ../../config/sofia-api.Dockerfile
    container_name: sofia_supermarkets_api
    restart: unless-stopped
    environment:
      - DB_URL=jdbc:h2:mem:testdb
      - DB_USERNAME=sa
      - DB_PASSWORD=sa
      - GOOGLE_API_KEY=dummy
      - CLOUDINARY_API_SECRET=dummy
    ports:
      - "8080:8080"
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  db_data:
  n8n_data:
  redis_data:


